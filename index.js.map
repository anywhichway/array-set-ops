{"mappings":"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","sources":["src/index.js","src/difference.js","src/create-iterable.js","src/loop-functions.js","src/intersection.js","src/symmetric-difference.js","src/union.js","src/is-disjoint-from.js","src/is-superset-of.js","src/is-subset-of.js"],"sourcesContent":["import {difference,iterableDifference} from \"./difference.js\";\r\nimport {intersection,iterableIntersection} from \"./intersection.js\";\r\nimport {symmetricDifference,iterableSymmetricDifference} from \"./symmetric-difference.js\";\r\nimport {union,iterableUnion} from \"./union.js\";\r\nimport isDisjointFrom from \"./is-disjoint-from.js\";\r\nimport isSupersetOf from \"./is-superset-of.js\";\r\nimport isSubsetOf from \"./is-subset-of.js\";\r\nimport {createIterable} from \"./create-iterable.js\";\r\n\r\nconst classPrototype = {\r\n    patch(cls) {\r\n        Object.entries({difference,intersection,symmetricDifference,union}).forEach(([name,f]) => {\r\n            Object.defineProperty(cls.prototype,name,{get() {\r\n                    const ctx = this;\r\n                    return new Proxy(f,{\r\n                        get(target,property) {\r\n                            const value = target[property];\r\n                            if(typeof(value)===\"function\") return value.bind(ctx);\r\n                            return value;\r\n                        }\r\n                    })\r\n                }})\r\n\r\n        })\r\n        Object.assign(cls.prototype,{\r\n            isSubsetOf,\r\n            isSupersetOf,\r\n            isDisjointFrom,\r\n        })\r\n    }\r\n}\r\n\r\nconst d = (base,...rest) => difference.call(base,...rest);\r\nd.iterable = (base,...rest) => iterableDifference.call(base,...rest);\r\nconst i = (base,...rest) => intersection.call(base,...rest);\r\ni.iterable = (base,...rest) => iterableIntersection.call(base,...rest);\r\nconst s = (base,...rest) => symmetricDifference.call(base,...rest);\r\ns.iterable = (base,...rest) => iterableSymmetricDifference.call(base,...rest);\r\nconst u = (base,...rest) => union.call(base,...rest);\r\nu.iterable = (base,...rest) => iterableUnion.call(base,...rest);\r\n\r\nconst sub = (base,...rest) => isSubsetOf.call(base,...rest)\r\nconst sup = (base,...rest) => isSupersetOf.call(base,...rest)\r\nconst dis = (base,...rest) => isDisjointFrom.call(base,...rest)\r\n\r\nexport {\r\n    classPrototype,\r\n    classPrototype as default,\r\n    d as difference,\r\n    i as intersection,\r\n    s as symmetricDifference,\r\n    u as union,\r\n    sub as isSubsetOf,\r\n    sup as isSupersetOf,\r\n    dis as isDisjointFrom,\r\n    createIterable\r\n}","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\n\r\nimport {createIterable} from \"./create-iterable.js\";\r\n\r\nconst differ = (iterating) => {\r\n    let i, j, base, args, len, diff, memory;\r\n    return function () {\r\n        if(!args) {\r\n            args = [].map.call(arguments,(arg) => arg instanceof Set ? arg : new Set(arg));\r\n            len = args.length;\r\n            base = Array.isArray(this) ? this : [...this];\r\n            diff = new Set();\r\n            memory = new Set();\r\n            i = 0;\r\n            j = 0;\r\n        }\r\n        for(;i<base.length;i++) { // for each item in the base\r\n            let item = base[i];\r\n            if(!(diff.has(item) || memory.has(item))) { // if it is not already part of the difference or seen\r\n                memory.add(item);\r\n                for (; j < len; j++) { // see if another arg contains it\r\n                    if (args[j].has(item)) {\r\n                        break; // it is contained\r\n                    }\r\n                }\r\n                if (j === args.length) { // it was not contained, so add to difference\r\n                    diff.add(item);\r\n                    if (iterating) {\r\n                        i++;\r\n                        j = 0;\r\n                        return {value: item};\r\n                    }\r\n                }\r\n                j = 0;\r\n            }\r\n        }\r\n        args = null;\r\n        memory = null;\r\n        return iterating ? { done: true} : (Array.isArray(this) ? [...diff] : diff);\r\n    }\r\n}\r\n\r\nconst difference = differ(),\r\n    iterableDifference = createIterable(differ);\r\n\r\nexport {difference,iterableDifference,difference as default}","import {loopFunctions} from \"./loop-functions.js\";\r\n\r\nfunction createIterable(setFunction) {\r\n    return function(...args) {\r\n        const f = setFunction(true),\r\n            ctx = this;\r\n        return {\r\n            next() {\r\n                return f.call(ctx,...args);\r\n            },\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            },\r\n            ...loopFunctions\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    createIterable,\r\n    createIterable as default\r\n}\r\n","const loopFunctions = {\r\n    at(index) {\r\n        if(index>=0) {\r\n            let i = 0;\r\n            for (const item of this) {\r\n                if(i===index) return item;\r\n                i++;\r\n            }\r\n            return;\r\n        }\r\n        const array = !Array.isArray(this) ? [...this] : this;\r\n        return array[(array.length-index)-1]\r\n    },\r\n    every(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if(!f(item, i, this)) return false;\r\n            i++;\r\n        }\r\n        return true;\r\n    },\r\n    filter(f) {\r\n        const set = this instanceof Set,\r\n            result = set ? new Set() : [];\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if(f(item, i, this)) {\r\n                set ? result.add(item) : result.push(item)\r\n            }\r\n            i++;\r\n        }\r\n        return result;\r\n    },\r\n    find(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n           if(f(item, i, this)) return item;\r\n           i++\r\n        }\r\n    },\r\n    findIndex(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if(f(item, i, this)) return i;\r\n            i++\r\n        }\r\n    },\r\n    forEach(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            f(item, i, this);\r\n            i++;\r\n        }\r\n    },\r\n    map(f) {\r\n        const set = this instanceof Set,\r\n            result = set ? new Set() : [];\r\n        let i = 0;\r\n        for (const item of this) {\r\n            const value = f(item, i, this);\r\n            set ? result.add(value) : result[i++] = value;\r\n        }\r\n        return result;\r\n    },\r\n    reduce(f, result) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if (result === undefined) result = item;\r\n            else result = f(result, item, i, this);\r\n            i++;\r\n        }\r\n        return result;\r\n    },\r\n    reduceRight(f, result) {\r\n        Array.isArray(this) ? this.reduceRight(f,result) : [...this].reduceRight(f,result);\r\n    },\r\n    slice(start=0,end) {\r\n        const set = this instanceof Set,\r\n            memory = set ? new Set() : [],\r\n            len = set ? this.size : this.length;\r\n        if(end===undefined) {\r\n            end = len;\r\n        }\r\n        end = Math.min(end,len);\r\n        if(end<0) {\r\n            end = len - end;\r\n        }\r\n        let i = 0;\r\n        for(const item of this) {\r\n            if(i>=start) {\r\n                if(i<end) set ? memory.add(item) : memory.push(item)\r\n                else break;\r\n            }\r\n            i++;\r\n        }\r\n        return memory;\r\n    },\r\n    some(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if(f(item, i++, this)) return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nconst filter = loopFunctions.filter;\r\nObject.defineProperty(loopFunctions,\"filter\",{configurable:true,get() {\r\n        const ctx = this;\r\n        return new Proxy(filter,{\r\n            get(target,key) {\r\n                if(key===\"iterable\") {\r\n                    return function*(f) {\r\n                        let i = 0;\r\n                        for (const item of ctx) {\r\n                            if(f(item, i++, ctx)) {\r\n                                yield item;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return target[key];\r\n            }\r\n        })\r\n    }})\r\n\r\nconst map = loopFunctions.map;\r\nObject.defineProperty(loopFunctions,\"map\",{configurable:true,get() {\r\n        const ctx = this;\r\n        return new Proxy(map,{\r\n            get(target,key) {\r\n                if(key===\"iterable\") {\r\n                    const f = function*(f) {\r\n                        let i = 0;\r\n                        for (const item of f.ctx||ctx) {\r\n                            const value = f(item, i++, this);\r\n                            yield value;\r\n                        }\r\n                    }\r\n                    return f;\r\n                }\r\n                return target[key];\r\n            }\r\n        })\r\n    }})\r\n\r\nconst slice = loopFunctions.slice;\r\nObject.defineProperty(loopFunctions,\"slice\",{configurable:true,get() {\r\n        const ctx = this;\r\n        return new Proxy(slice,{\r\n            get(target,key) {\r\n                if(key===\"iterable\") {\r\n                    return function*(start=0,end) {\r\n                        const set = ctx instanceof Set,\r\n                            len = set ? this.size : this.length;\r\n                        if(end===undefined) {\r\n                            end = len;\r\n                        }\r\n                        end = Math.min(end,len);\r\n                        if(end<0) {\r\n                            end = len - end;\r\n                        }\r\n                        let i = 0;\r\n                        for(const item of ctx) {\r\n                            if(i>=start) {\r\n                                if(i<end) yield item;\r\n                                else break;\r\n                            }\r\n                            i++;\r\n                        }\r\n                    }\r\n                }\r\n                return target[key];\r\n            }\r\n        })\r\n    }})\r\n\r\n\r\nexport {loopFunctions,loopFunctions as default};","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell & 2019 Ophir LOJKINE\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport {createIterable} from \"./create-iterable.js\";\r\n\r\n/* Portions of algorithm taken from old version of https://github.com/lovasoa/fast_array_intersect under MIT license */\r\n    const intersector = (iterating) => {\r\n        let i, j, len, nOthers, args, result, memory;\r\n        return function() {\r\n            const set = this instanceof Set;\r\n            if(!args) {\r\n                args = [this,...arguments].sort((a,b) => a.length - b.length);\r\n                nOthers = args.length - 1;\r\n                result = [];\r\n                memory = new Map();\r\n                i = 0;\r\n                j = 0;\r\n            }\r\n            for(;i<=nOthers;i++) {\r\n                let array = args[i];\r\n                if(!Array.isArray(array)) args[i] = array = [...array];\r\n                const len = array.length;\r\n                while(j<len) {\r\n                    const elem = array[j];\r\n                    if (memory.get(elem) === i - 1) {\r\n                        if(i===nOthers) {\r\n                            memory.set(elem,0);\r\n                            if(iterating) {\r\n                                j++;\r\n                                return {value:elem}\r\n                            } else {\r\n                                result[result.length] = elem;\r\n                            }\r\n                        } else {\r\n                            memory.set(elem,i)\r\n                        }\r\n                    } else if (i === 0) {\r\n                        memory.set(elem,0);\r\n                    }\r\n                    j++;\r\n                }\r\n                j=0;\r\n            }\r\n            args = null;\r\n            return iterating ? {done:true} : (set ? new Set(result) : result);\r\n        }\r\n    }\r\n\r\nconst intersection = intersector(),\r\n    iterableIntersection = createIterable(intersector);\r\n\r\nexport {intersection,iterableIntersection,intersection as default};\r\n","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport intersection from \"./intersection.js\";\r\n\r\n/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport {createIterable} from \"./create-iterable.js\";\r\n\r\n/* Portions of algorithm taken from old version of https://github.com/lovasoa/fast_array_intersect under MIT license */\r\nconst differ = (iterating) => {\r\n    let i, j, k, arrays,  sets, memory, diff;\r\n    return function() {\r\n        const set = this instanceof Set;\r\n        if(!arrays) {\r\n            arrays = [this,...arguments].map((item) => item instanceof Set ? [...item] : item),\r\n            sets = [this,...arguments].map((item) => item instanceof Set ? item : new Set(item)),\r\n            memory = new Set(),\r\n            diff = new Set(),\r\n            i = 0;\r\n            j = 0;\r\n            k = 0;\r\n        }\r\n        for(;i<arrays.length;i++) {\r\n            const array = arrays[i];\r\n            for(;j<array.length;j++) {\r\n                const item = array[j];\r\n                if(!(diff.has(item) || memory.has(item))) {\r\n                    memory.add(item);\r\n                    for(;k<sets.length;k++) {\r\n                        if(k===i) continue;\r\n                        if(sets[k].has(item)) break;\r\n                    }\r\n                    if(k===sets.length) {\r\n                        diff.add(item);\r\n                        if(iterating) {\r\n                            k = 0;\r\n                            return {value:item}\r\n                        }\r\n                        k = 0;\r\n                    }\r\n                }\r\n            }\r\n            j = 0;\r\n        }\r\n        arrays = null;\r\n        sets = null;\r\n        memory = null;\r\n        return iterating ? {done:true} : (set ? diff : [...diff]);\r\n    }\r\n}\r\n\r\nconst symmetricDifference = differ(),\r\n    iterableSymmetricDifference = createIterable(differ);\r\n\r\nexport {symmetricDifference,iterableSymmetricDifference,symmetricDifference as default}\r\n","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\n/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell & 2019 Ophir LOJKINE\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport {createIterable} from \"./create-iterable.js\";\r\n\r\n/* Portions of algorithm taken from https://gist.github.com/lovasoa/3361645 under MIT license */\r\nconst unionizor = (iterating) => {\r\n    let i, j, ctx, nOthers, thisDone, args, memory;\r\n    return function(...args) {\r\n        if(!ctx) {\r\n            ctx = Array.isArray(this) ? this : [...this];\r\n            nOthers = args.length - 1;\r\n            memory = new Set();\r\n            thisDone = false;\r\n            i = 0;\r\n            j = 0;\r\n        }\r\n        while(i<=nOthers) {\r\n            let array = thisDone ? args[i++] : ctx;\r\n            array = array===ctx || Array.isArray(array) ? array : [...array];\r\n            const len = array.length;\r\n            while(j<len) {\r\n                const elem = array[j++];\r\n                if(iterating && !memory.has(elem)) {\r\n                    memory.add(elem);\r\n                    return {value:elem}\r\n                }\r\n                memory.add(elem);\r\n            }\r\n            thisDone = true;\r\n            j=0;\r\n        }\r\n        ctx = null;\r\n        return iterating ? {done:true} : this instanceof Set ? memory : [...memory];\r\n    }\r\n}\r\n\r\nconst union = unionizor(),\r\n//union.iterable = iterable;\r\niterableUnion = createIterable(unionizor)\r\n\r\n\r\nexport {union,iterableUnion,union as default};\r\n\r\n","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nfunction isDisjointFrom(...args) {\r\n    for(const item of this) {\r\n        if(args.some((arg,i) => {\r\n            return Array.isArray(arg) ? arg.includes(item) : arg.has(item);\r\n        })) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport {isDisjointFrom,isDisjointFrom as default}","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nfunction isSupersetOf(...args){\r\n    let base = this;\r\n    if(Array.isArray(base)) base = new Set(base);\r\n    for(let set of args) {\r\n        if(set instanceof Set && set.size>base.size) return false;\r\n        for(const item of set) {\r\n            if(base.has(item)) continue;\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport {isSupersetOf,isSupersetOf as default}","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nfunction isSubsetOf(...args) {\r\n    let base = this;\r\n    if(Array.isArray(base)) base = new Set(base);\r\n    for(let set of args) {\r\n        if(set instanceof Set) {\r\n            if(set.size<base.size) return false;\r\n            for(const item of base) {\r\n                if(set.has(item)) continue;\r\n                return false;\r\n            }\r\n        } else {\r\n            for(const item of base) {\r\n                if(set.includes(item)) continue;\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport {isSubsetOf,isSubsetOf as default}"],"names":[],"version":3,"file":"index.js.map"}