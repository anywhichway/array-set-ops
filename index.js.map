{"mappings":"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","sources":["src/loop-functions.js","src/cartesian-product.js","src/index.js","src/difference.js","src/intersection.js","src/symmetric-difference.js","src/union.js","src/is-disjoint-from.js","src/is-superset-of.js","src/is-subset-of.js"],"sourcesContent":["import CartesianProduct from \"./cartesian-product.js\";\r\nconst loopFunctions = {\r\n    at(index) {\r\n        if(index>=0) {\r\n            let i = 0;\r\n            for (const item of this) {\r\n                if(i===index) return item;\r\n                i++;\r\n            }\r\n            return;\r\n        }\r\n        const array = !Array.isArray(this) ? [...this] : this;\r\n        return array[(array.length-index)-1]\r\n    },\r\n    every(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if(!f(item, i++, this)) return false;\r\n        }\r\n        return true;\r\n    },\r\n    filter(f) {\r\n        const set = this instanceof Set,\r\n            result = set ? new Set() : [];\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if(f(item, i++, this)) {\r\n                set ? result.add(item) : result.push(item)\r\n            }\r\n        }\r\n        return result;\r\n    },\r\n    find(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n           if(f(item, i++, this)) return item\r\n        }\r\n    },\r\n    findIndex(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if(f(item, i++, this)) return i\r\n        }\r\n    },\r\n    forEach(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            f(item, i++, this);\r\n        }\r\n    },\r\n    map(f) {\r\n        const set = this instanceof Set,\r\n            result = set ? new Set() : [];\r\n        let i = 0;\r\n        for (const item of this) {\r\n            const value = f(item, i++, this);\r\n            set ? result.add(value) : result[i] = value;\r\n        }\r\n        return result;\r\n    },\r\n    reduce(f, result) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if (result === undefined) result = item;\r\n            else result = f(result, item, i++, this);\r\n        }\r\n        return result;\r\n    },\r\n    reduceRight(f, result) {\r\n        return Array.isArray(this) ? this.reduceRight(f,result) : [...this].reduceRight(f,result);\r\n    },\r\n    some(f) {\r\n        let i = 0;\r\n        for (const item of this) {\r\n            if(f(item, i++, this)) return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport {loopFunctions,loopFunctions as default};","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell & 2019 Ophir LOJKINE\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\n/// portions from http://phrogz.net/lazy-cartesian-product\r\n\r\nfunction CartesianProduct(...collections) {\r\n    if(!(this instanceof CartesianProduct)) return new CartesianProduct(...collections);\r\n    collections = collections.map((item) => Array.isArray(item) ? item : [...item]);\r\n    for (var dm=[],f=1,l,i=collections.length;i--;f*=l){ dm[i]=[f,l=collections[i].length] }\r\n    let started;\r\n    Object.defineProperty(this,\"next\",{configurable:true,writable:true,value:\r\n        function() {\r\n            if(!started) {\r\n                var p=[],max=collections.length-1,lens=[], d = 0;\r\n                for (var i=collections.length;i--;) lens[i]=collections[i].length;\r\n                started = true;\r\n            }\r\n            while(p.length) {\r\n                const a=collections[d], len=lens[d];\r\n                for (let i=0;i<len;++i) p[d]=a[i];\r\n                if(d===max) {\r\n                    return {value: p}\r\n                } else {\r\n                    d++;\r\n                }\r\n                p.pop();\r\n            }\r\n            started = false;\r\n            return {done: true}\r\n        }});\r\n        Object.defineProperty(this,\"at\",{configurable:true,writable:true,value:function(n) {\r\n            for (var c=[],i=collections.length;i--;)c[i]=collections[i][(n/dm[i][0]<<0)%dm[i][1]];\r\n            return c;\r\n        }});\r\n        Object.defineProperty(this,[Symbol.Iterator],{configurable:true,get() { return this; }})\r\n        Object.defineProperty(this,\"length\",{configurable:true,get() { return f; }});\r\n        return this;\r\n    }\r\n\r\nconst loopFunctions = (await import(\"./loop-functions.js\")).default;\r\nObject.entries(loopFunctions).forEach(([key,value]) => {\r\n    if(key!==\"at\") Object.defineProperty(CartesianProduct.prototype,\"key\",{configurable:true,writable:true,value})\r\n})\r\n\r\nfunction cartesianProduct(...collections) {\r\n    const cp = new CartesianProduct(this,...collections);\r\n    return this instanceof Set ? new Set([...cp]) : [...cp];\r\n}\r\n\r\nexport {cartesianProduct,CartesianProduct,CartesianProduct as default};\r\n","import difference from \"./difference.js\";\r\nimport intersection from \"./intersection.js\";\r\nimport symmetricDifference from \"./symmetric-difference.js\";\r\nimport union from \"./union.js\";\r\nimport isDisjointFrom from \"./is-disjoint-from.js\";\r\nimport isSupersetOf from \"./is-superset-of.js\";\r\nimport isSubsetOf from \"./is-subset-of.js\";\r\n\r\nconst classPrototype = {\r\n    difference,\r\n    intersection,\r\n    symmetricDifference,\r\n    union,\r\n    isSubsetOf,\r\n    isSupersetOf,\r\n    isDisjointFrom\r\n}\r\n\r\n\r\nexport {classPrototype,classPrototype as default}","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport {loopFunctions} from \"./loop-functions.js\";\r\n/* Portions of algorithm taken from old version of https://github.com/lovasoa/fast_array_intersect under MIT license */\r\nconst create = (iterating) => {\r\n    let i, j, base, nOthers, args, memory, diff;\r\n    return function() {\r\n        const set = this instanceof Set;\r\n        if(!args) {\r\n            args = [...arguments],\r\n            base = set ? [...this] : this;\r\n            memory = new Set();\r\n            diff = new Set(),\r\n            i = 0;\r\n            j = 0;\r\n        }\r\n        for(;i<base.length;i++) {\r\n            const item = base[i];\r\n            if (!memory.has(item)) {\r\n                memory.add(item);\r\n                for (; j < args.length; j++) {\r\n                    let arg = args[j];\r\n                    if (!(arg instanceof Set)) arg = args[j] = new Set(arg);\r\n                    if (arg.has(item)) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (j === args.length) {\r\n                    diff.add(item);\r\n                    if(iterating) return {value: item}\r\n                }\r\n            }\r\n            j = 0;\r\n        }\r\n        args = null;\r\n        return iterating ? {done:true} : (set ? diff : [...diff]);\r\n    }\r\n}\r\nfunction iterable(...args) {\r\n    const difference = create(true),\r\n        set = this instanceof Set;\r\n    let started;\r\n    return {\r\n        next() {\r\n            if (started) {\r\n                return difference();\r\n            }\r\n            started = true;\r\n            return difference(...args);\r\n        },\r\n        [Symbol.iterator]() {\r\n            started = false;\r\n            return this;\r\n        },\r\n        ...loopFunctions\r\n    }\r\n}\r\n\r\nconst difference = create();\r\nObject.defineProperty(difference,\"iterable\",{get() {\r\n        return iterable.bind(this);\r\n    }});\r\n\r\nexport {difference,difference as default}","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell & 2019 Ophir LOJKINE\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport {loopFunctions} from \"./loop-functions.js\";\r\n\r\n/* Portions of algorithm taken from old version of https://github.com/lovasoa/fast_array_intersect under MIT license */\r\n    const create = (iterating) => {\r\n        let i, j, len, nOthers, args, result, memory;\r\n        return function() {\r\n            const set = this instanceof Set;\r\n            if(!args) {\r\n                args = [].sort.call([this,...arguments],(a,b) => a.length - b.length);\r\n                nOthers = args.length - 1;\r\n                result = [];\r\n                memory = new Map();\r\n                i = 0;\r\n                j = 0;\r\n            }\r\n            for(;i<=nOthers;i++) {\r\n                let array = args[i];\r\n                if(!Array.isArray(array)) args[i] = array = [...array];\r\n                const len = array.length;\r\n                while(j<len) {\r\n                    const elem = array[j];\r\n                    if (memory.get(elem) === i - 1) {\r\n                        if(i===nOthers) {\r\n                            result[result.length] = elem;\r\n                            memory.set(elem,0);\r\n                            if(iterating) {\r\n                                j++;\r\n                                return {value:elem}\r\n                            }\r\n                        } else {\r\n                            memory.set(elem,i)\r\n                        }\r\n                    } else if (i === 0) {\r\n                        memory.set(elem,0);\r\n                    }\r\n                    j++;\r\n                }\r\n                j=0;\r\n            }\r\n            args = null;\r\n            return iterating ? {done:true} : (set ? new Set(result) : result);\r\n        }\r\n    }\r\nfunction iterable(...args) {\r\n    const intersect = create(true),\r\n        set = this instanceof Set;\r\n    let started;\r\n    return {\r\n        next() {\r\n            if (started) {\r\n                return intersect();\r\n            }\r\n            started = true;\r\n            return intersect(...args);\r\n        },\r\n        [Symbol.iterator]() {\r\n            started = false;\r\n            return this;\r\n        },\r\n        ...loopFunctions\r\n    }\r\n}\r\n\r\nconst intersection = create();\r\nObject.defineProperty(intersection,\"iterable\",{get() {\r\n    return iterable.bind(this);\r\n}});\r\n\r\nexport {intersection,intersection as default};\r\n","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport intersection from \"./intersection.js\";\r\n\r\n/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport {loopFunctions} from \"./loop-functions.js\";\r\n/* Portions of algorithm taken from old version of https://github.com/lovasoa/fast_array_intersect under MIT license */\r\nconst create = (iterating) => {\r\n    let i, j, k, arrays,  sets, memory, diff;\r\n    return function() {\r\n        const set = this instanceof Set;\r\n        if(!arrays) {\r\n            arrays = [this,...arguments].map((item) => item instanceof Set ? [...item] : item),\r\n            sets = [this,...arguments].map((item) => item instanceof Set ? item : new Set(item)),\r\n            memory = new Set(),\r\n            diff = new Set(),\r\n            i = 0;\r\n            j = 0;\r\n            k = 0;\r\n        }\r\n        for(;i<arrays.length;i++) {\r\n            const array = arrays[i];\r\n            for(;j<array.length;j++) {\r\n                const item = array[j];\r\n                if(!memory.has(item)) {\r\n                    memory.add(item);\r\n                    for(;k<sets.length;k++) {\r\n                        if(k===i) continue;\r\n                        if(sets[k].has(item)) break;\r\n                    }\r\n                    if(k===sets.length) {\r\n                        diff.add(item);\r\n                        if(iterating) {\r\n                            k = 0;\r\n                            return {value:item}\r\n                        }\r\n                        k = 0;\r\n                    }\r\n                }\r\n            }\r\n            j = 0;\r\n        }\r\n        arrays = null;\r\n        return iterating ? {done:true} : (set ? diff : [...diff]);\r\n    }\r\n}\r\nfunction iterable(...args) {\r\n    const symmetricDifference = create(true),\r\n        set = this instanceof Set;\r\n    let started;\r\n    return {\r\n        next() {\r\n            if (started) {\r\n                return symmetricDifference();\r\n            }\r\n            started = true;\r\n            return symmetricDifference(...args);\r\n        },\r\n        [Symbol.iterator]() {\r\n            started = false;\r\n            return this;\r\n        },\r\n        ...loopFunctions\r\n    }\r\n}\r\n\r\nconst symmetricDifference = create();\r\nObject.defineProperty(symmetricDifference,\"iterable\",{get() {\r\n        return iterable.bind(this);\r\n    }});\r\n\r\nexport {symmetricDifference,symmetricDifference as default}\r\n","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\n/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell & 2019 Ophir LOJKINE\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nimport {loopFunctions} from \"./loop-functions.js\";\r\n\r\n/* Portions of algorithm taken from old version of https://github.com/lovasoa/fast_array_intersect under MIT license */\r\nconst create = (iterating) => {\r\n    let i, j, nOthers, args, memory;\r\n    return function() {\r\n        const set = this instanceof Set;\r\n        if(!args) {\r\n            args = [this,...arguments];\r\n            nOthers = args.length - 1;\r\n            memory = new Set();\r\n            i = 0;\r\n            j = 0;\r\n        }\r\n        for(;i<=nOthers;i++) {\r\n            let array = args[i];\r\n            if(!Array.isArray(array)) args[i] = array = [...array];\r\n            const len = array.length;\r\n            while(j<len) {\r\n                const elem = array[j++];\r\n                if(!memory.has(elem)) {\r\n                    memory.add(elem);\r\n                    if(iterating) {\r\n                        return {value:elem}\r\n                    }\r\n                }\r\n            }\r\n            j=0;\r\n        }\r\n        args = null;\r\n        return iterating ? {done:true} : (set ? memory : [...memory]);\r\n    }\r\n}\r\nfunction iterable(...args) {\r\n    const union = create(true),\r\n        set = this instanceof Set;\r\n    let started;\r\n    return {\r\n        next() {\r\n            if (started) {\r\n                return union();\r\n            }\r\n            started = true;\r\n            return union(...args);\r\n        },\r\n        [Symbol.iterator]() {\r\n            started = false;\r\n            return this;\r\n        },\r\n        ...loopFunctions\r\n    }\r\n}\r\n\r\nconst union = create();\r\nObject.defineProperty(union,\"iterable\",{get() {\r\n        return iterable.bind(this);\r\n    }});\r\n\r\n\r\nexport {union,union as default};\r\n\r\n","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nfunction isDisjointFrom(...args) {\r\n    for(const item of this) {\r\n        if(args.some((arg,i) => {\r\n            return Array.isArray(arg) ? arg.includes(item) : arg.has(item);\r\n        })) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport {isDisjointFrom,isDisjointFrom as default}","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nfunction isSupersetOf(...args){\r\n    let base = this;\r\n    if(Array.isArray(base)) base = new Set(base);\r\n    for(let set of args) {\r\n        if(set instanceof Set && set.size>base.size) return false;\r\n        for(const item of set) {\r\n            if(base.has(item)) continue;\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport {isSupersetOf,isSupersetOf as default}","/* MIT License\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\n\r\nfunction isSubsetOf(...args) {\r\n    let base = this;\r\n    if(Array.isArray(base)) base = new Set(base);\r\n    for(let set of args) {\r\n        if(set instanceof Set) {\r\n            if(set.size<base.size) return false;\r\n            for(const item of base) {\r\n                if(set.has(item)) continue;\r\n                return false;\r\n            }\r\n        } else {\r\n            for(const item of base) {\r\n                if(set.includes(item)) continue;\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport {isSubsetOf,isSubsetOf as default}"],"names":[],"version":3,"file":"index.js.map"}